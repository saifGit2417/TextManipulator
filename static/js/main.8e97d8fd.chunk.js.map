{"version":3,"sources":["Components/Navbar.jsx","Components/Textarea.jsx","Components/Aboutus.jsx","Components/Alert.jsx","App.js","reportWebVitals.js","index.js","Components/Textarea.module.css","logo.svg"],"names":["Navbarboot","_ref","Name","Home","About","mode","togglemode","buttontext","react_default","a","createElement","Navbar","bg","expand","variant","Container","fluid","Brand","Toggle","aria-controls","Collapse","id","Nav","className","style","maxHeight","navbarScroll","dist","to","color","textDecoration","Form","Check","type","label","onClick","Textarea","showalert","_useState","useState","_useState2","Object","slicedToArray","text","settext","container","Control","as","placeholder","cols","rows","PlaceHolder","onChange","e","target","value","class","backgroundColor","Button","newText","toLocaleUpperCase","disabled","length","newText1","toLocaleLowerCase","document","getElementById","select","getSelection","removeAllRanges","navigator","clipboard","writeText","newtext","split","join","filter","event","Aboutus","objectDestructuringEmpty","Fragment","Alertcode","alertmsg","height","Alert","key","concat","typeofmsg","msg","App","setmode","_useState3","_useState4","buttontextset","_useState5","_useState6","setalertmsg","setTimeout","Components_Navbar","Contact","body","Components_Alert","react_router_dist","path","element","Components_Textarea","Components_Aboutus","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","src_App","module","exports","head","p"],"mappings":"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","file":"static/js/main.8e97d8fd.chunk.js","sourcesContent":["import React from 'react';\r\n// import Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Navbarboot({ Name, Home, About, mode, togglemode, buttontext }) {\r\n    return (\r\n        <div >\r\n            <Navbar bg={mode} expand=\"lg\" variant={mode}>\r\n                <Container fluid  >\r\n                <Navbar.Brand >{Name}</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                    <Navbar.Collapse id=\"navbarScroll\">\r\n                        <Nav className=\"me-auto my-2 my-lg-0\" style={{ maxHeight: '100px' }} navbarScroll>\r\n                            <NavLink to=\"/\" style={{ color: mode === \"light\" ? \"black\" : \"white\", textDecoration: \"none\" }} className='mx-5'>{Home}</NavLink>\r\n                            <NavLink to=\"about\" style={{ color: mode === \"light\" ? \"black\" : \"white\", textDecoration: \"none\" }} className='mx-5'>{About}</NavLink>\r\n                        </Nav>\r\n                        <Form.Check type=\"switch\" label={buttontext} onClick={togglemode} id=\"custom-switch\" />\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbarboot;","import React, { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport Form from 'react-bootstrap/Form';\r\nimport style from './Textarea.module.css'\r\nfunction Textarea({ mode, showalert }) {\r\n\r\n    let [text, settext] = useState('');\r\n    const handleOnChange = (e) => {\r\n        settext(e.target.value)\r\n    }\r\n    const handleOnClick = () => {\r\n        let newText = text.toLocaleUpperCase()\r\n        settext(newText)\r\n        showalert(\"Converted to UpperCase\", \"Success\")\r\n    }\r\n    const handleonclick1 = () => {\r\n        let newText1 = text.toLocaleLowerCase()\r\n        settext(newText1)\r\n        showalert(\"Converted to LowerCase\", \"Success\")\r\n    }\r\n    const handelcopytext = () => {\r\n        let text = document.getElementById(\"textareabox\")\r\n        showalert(\"Copied To Clipboard\", \"Success\")\r\n        text.select();\r\n        //to deselect all content after copying itt//\r\n        document.getSelection().removeAllRanges()\r\n        navigator.clipboard.writeText(text.value)\r\n    }\r\n    const handelExtraSpaces = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        settext(newtext.join(\" \"));\r\n        showalert(\"Extra Spaces Removed\", \"Success\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <h1 >Enter text Below</h1>\r\n            <Form.Control as=\"textarea\" placeholder=\"Enter Text\" cols=\"80\" rows=\"10\" PlaceHolder=\"Enter Text Here\" onChange={handleOnChange} value={text} id=\"textareabox\" class=\"col-xs-12\" style={{ backgroundColor: mode === \"light\" ? \"white\" : \"#a4b0be\", color: mode === \"light\" ? \"black\" : \"white\" }} />\r\n            <br />\r\n            <Button variant=\"success\" onClick={handleOnClick} className=\"mx-3 my-3\" disabled={text.length === 0}>Convert To UpperCase</Button>\r\n            <Button variant=\"success\" onClick={handleonclick1} className=\"mx-3 my-3\" disabled={text.length === 0}>Convert To LowerCase</Button>\r\n            <Button variant=\"success\" onClick={handelcopytext} className=\"mx-3 my-3\" disabled={text.length === 0}>Copy Text</Button>\r\n            <Button variant=\"success\" onClick={handelExtraSpaces} className=\"mx-3 my-3\" disabled={text.length === 0}>Remove Extra Spaces</Button>\r\n            <Button onClick={() => { settext(\"\") }} className=\"mx-3 my-3\">Reset</Button>\r\n            <h1 className=\"my-3\">Data from input</h1>\r\n            <p> {text.split(/\\s+/).filter((event) => { return event.length !== 0 }).length}  words and {text.length} charachters</p>\r\n            <p>{0.008 * text.split(' ').filter((event) => { return event.length !== 0 }).length} Minuts required to read</p>\r\n            <h2>Preview of entered text</h2>\r\n            <p>{text.length > 0 ? text : \"Nothing To Preview\"}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Textarea;","import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\n\r\nfunction Aboutus({  }) {\r\n  return (\r\n    <>\r\n      <h2>Features of this website</h2>\r\n      <ol>\r\n        <li>Convert to uppercase</li>\r\n        <li>Convert to lowercase</li>\r\n        <li>Remove extra spaces</li>\r\n        <li>Copy text</li>\r\n        <li>Word and alphabet count</li>\r\n        <li>Time required to read as per no of words</li>\r\n      </ol>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default Aboutus;","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Alertcode({ alertmsg }) {\r\n    return (\r\n        <div style={{height:\"70px\"}}>\r\n           { alertmsg && <div>\r\n                <Alert key=\"success\" variant=\"success\">\r\n                    <strong>{`${alertmsg.typeofmsg} : `}</strong>{alertmsg.msg}\r\n                </Alert>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alertcode;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport Navbarboot from './Components/Navbar';\nimport Textarea from './Components/Textarea';\nimport { useState } from \"react\";\nimport { Routes, Route } from 'react-router-dom';\nimport Aboutus from './Components/Aboutus';\nimport Alertcode from './Components/Alert';\n\n\n\n\nfunction App() {\n\n  let [mode, setmode] = useState(\"light\");\n  const [buttontext, buttontextset] = useState(\"Enable Dark Mode\")\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\")\n      buttontextset(\"Enable Light Mode\")\n      showalert(\"Dark Mode Has Been Enabled\", \"Success\")\n      document.body.style.backgroundColor = \"#a4b0be\"\n      document.body.style.color = \"white\"\n    } else {\n      setmode(\"light\")\n      buttontextset(\"Enable Dark Mode\");\n      showalert(\"Light Mode Has Been Enabled\", \"Success\")\n      document.body.style.backgroundColor = \"white\"\n      document.body.style.color = \"black\"\n    }\n  }\n\n  const [alertmsg, setalertmsg] = useState(null)\n\n  const showalert = (msg, typeofmsg) => {\n    setalertmsg({\n      msg: msg,\n      typeofmsg: typeofmsg\n    })\n    setTimeout(() => {\n      setalertmsg(null)\n    }, 1000);\n\n  }\n  return (\n    <div>\n      <Navbarboot Name=\"Text-Manipulator\" Home=\"Home\" About=\"About\" Contact=\"Contact Us\" mode={mode} togglemode={togglemode} buttontext={buttontext} />\n      <Alertcode alertmsg={alertmsg} />\n      <Routes>\n        <Route path=\"/\" element={<Textarea mode={mode} showalert={showalert} />} />\n        <Route path=\"about\" element={<Aboutus />} />\n      </Routes>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Textarea_container__1ryls\",\"head\":\"Textarea_head__1RQHp\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}